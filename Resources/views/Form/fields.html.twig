{% block _oro_email_autoresponserule_conditions_entry_field_row %}
    {{ form_widget(form) }}
{% endblock %}

{% block _oro_email_autoresponserule_conditions_entry_filter_row %}
    {% for child in form %}
        {{ form_widget(child, {'attr': {'class': child.vars['name']}}) }}
    {% endfor %}
{% endblock %}

{% block oro_email_template_list_row %}
    <script type="text/javascript">
        require(['jquery',
                    'oroemail/js/app/views/email-template-view',
                    'oroemail/js/app/models/email-template-collection'],
        function($, View, Collection) {
            $(function () {
                'use strict';
                var $templateSelectorEl = $('#{{ id }}');
                {% if includeSystemTemplates is defined and not includeSystemTemplates %}
                    var includeSystemTemplates = false;
                {% else %}
                    var includeSystemTemplates = true;
                {% endif %}
                new View({
                    el: $templateSelectorEl.closest('form').find('[name$="[{{ depends_on_parent_field }}]"]'),
                    target: $templateSelectorEl,
                    collection: new Collection(
                        '{{ data_route }}',
                        {{ data_route_parameter|json_encode|raw }},
                        {{ includeNonEntity is defined and includeNonEntity ? 'true' : 'false' }},
                        includeSystemTemplates
                    )
                });
            });
        })
    </script>
    <script type="text/template" id="emailtemplate-chooser-template">
        <% _.each(entities, function(entity, i) { %>
        <option value="<%= entity.get('id') %>"><%= entity.get('name') %></option>
        <% }); %>
    </script>

    {{ form_row(form) }}
{% endblock %}

{% block oro_email_link_to_scope_row %}
    <script type="text/javascript">
        require(['jquery'],
            function($) {
                function initLinkToScopeEl(mainEl, el) {
                    if (parseInt($(mainEl).val())) {
                        $(el).attr('disabled', false);
                        $(el).parent('div').removeClass('disabled');
                    } else {
                        $(el).attr('disabled', true);
                        $(el).parent('div').addClass('disabled');
                    }
                }
                $(function () {
                    var selectorEl = '{{ form.vars.id }}';
                    var emailLinkToScopeEl = $('#' + selectorEl);
                    var enableAttachmentEl = $(emailLinkToScopeEl).closest('form')
                            .find('[data-ftid=oro_entity_config_type_attachment_enabled]');
                    initLinkToScopeEl(enableAttachmentEl, emailLinkToScopeEl);
                    $(enableAttachmentEl).on('change', function() {
                        initLinkToScopeEl(enableAttachmentEl, emailLinkToScopeEl);
                    });
                });
            })
    </script>
    {{ form_row(form) }}
{% endblock %}

{% block oro_email_attachments_row %}
    <script type="text/template" id="email-attachment-item">
        <div class="attachment-item" style="border: none">
            <span data-id="<%= id %>" class="filename">
                <i class="icon icon-file-alt"></i>
                <span class="filename-label"><%= fileName %></span>
                <i class="icon-remove"></i>
            </span>
            <input name="<%= inputName %>[<%= cid %>][id]" type="text" value="<%= id %>"/>
            <input name="<%= inputName %>[<%= cid %>][type]" type="text" value="<%= type %>" class="attachment-type"/>
            <input name="<%= inputName %>[<%= cid %>][file]" type="file"/>
        </div>
    </script>

    <script type="text/template" id="email-attachment-select-view">
        <div class="attachment-list-content">
            <div class="filter-block">
                <label>{{ 'oro.email.attachment.select_file'|trans }}</label>
                <input type="text" class="filter"/>
            </div>
            <div class="attachment-list">
                <div class="no-items">
                    <p class="text-center">{{ 'oro.email.form.no_attachments'|trans }}</p>
                </div>
                <div class="group-block entity-attachments">
                    <b>{{ 'oro.email.form.record_attachments'|trans }}</b>
                    <div class="entity-attachments-list"></div>
                </div>
                <div class="group-block thread-attachments">
                    <b>{{ 'oro.email.form.thread_attachments'|trans }}</b>
                    <div class="thread-attachments-list"></div>
                </div>
            </div>
        </div>
        <div class="clear"></div>
        <div class="attachment-actions">
            <div class="pull-right">
                <a class="btn cancel">{{ 'Cancel'|trans }}</a>
                <a class="btn btn-primary attach">{{ 'oro.email.form.attach'|trans }}</a>
            </div>
        </div>
    </script>

    <script type="text/template" id="email-attachment-list-row-view">
        <div class="attachment-list-row <% if (!visible) { %>hide<% } %>">
            <input type="checkbox" class="checkbox" <% if (checked) { %>checked<% } %>>
            <span><%= fileName %> (<%= fileSize %>, <%= modified %>)</span>
        </div>
    </script>

    {% set entityAttachmentsArray = [] %}
    {% for attachment in options.entityAttachments %}
        {% set entityAttachmentArray = {
            'id': attachment.id,
            'type': attachment.type,
            'fileName': attachment.fileName
        } %}
        {% set entityAttachmentsArray = entityAttachmentsArray|merge([entityAttachmentArray]) %}
    {% endfor %}

    {% set attachmentsAvailableArray = [] %}
    {% for attachment in options.attachmentsAvailable %}
        {% set attachmentAvailableArray = {
            'id': attachment.id,
            'type': attachment.type,
            'fileName': attachment.fileName,
            'fileSize': attachment.fileSize,
            'modified': attachment.modified
        } %}
        {% set attachmentsAvailableArray = attachmentsAvailableArray|merge([attachmentAvailableArray]) %}
    {% endfor %}

    {% set options = options|merge({
        containerId: id,
        inputName: full_name,
        entityAttachments: entityAttachmentsArray,
        attachmentsAvailable: attachmentsAvailableArray
    }) %}

    <div data-page-component-module="oroemail/js/app/components/email-attachment-component"
         data-page-component-options="{{ options|json_encode }}">
        {{ form_row(form) }}
    </div>
{% endblock %}

{% block oro_email_emailtemplate_translatation_widget %}
    <div class="emailtemplate-translatation oro-tabs tabbable">
        <ul class="nav nav-tabs">
            {% spaceless %}
                {% if simple_way %}
                    {% for translationsField in form %}
                        {{ _self.renderTabNavItem(translationsField, labels) }}
                    {% endfor %}
                {% else %}
                    {% for translationsLocales in form %}
                        {% for translationsField in translationsLocales %}
                            {{ _self.renderTabNavItem(translationsField, labels, ('defaultLocale' == translationsLocales.vars.name)) }}
                        {% endfor %}
                    {% endfor %}
                {% endif %}
            {% endspaceless %}
        </ul>
        <div class="tab-content">
            {% spaceless %}
                {% if simple_way %}
                    {% for translationsField in form %}
                        {{ _self.renderTab(translationsField) }}
                    {% endfor %}
                {% else %}
                    {% for translationsLocales in form %}
                        {% for translationsField in translationsLocales %}
                            {{ _self.renderTab(translationsField) }}
                        {% endfor %}
                    {% endfor %}
                {% endif %}
            {% endspaceless %}
        </div>
    </div>
    <script type="text/javascript">
        require(['jquery'],
                function($) {
                    $('.emailtemplate-translatation.oro-tabs.tabbable ul.nav.nav-tabs li a').on('show', function(e) {
                        var target = e.target || window.event.target;
                        var dataRelated = $(target).attr('data-related');
                        $($(target).closest('form').find(':input.translation')).each(function(key, el) {
                            $(el).val(dataRelated);
                        });
                    });
                })
    </script>
{% endblock %}

{% block oro_email_email_folder_tree_row %}
    {% if form.vars.value is not null and form.vars.value|length > 0 %}
        {{ form_row(form) }}
    {% endif %}
{% endblock %}

{% block oro_email_email_folder_tree_widget %}
    {% set options = {
        dataInputSelector: 'input[name="' ~ full_name ~ '"]',
        checkAllSelector: '.check-all',
        relatedCheckboxesSelector: '.folder-list :checkbox'
    } %}
    <div class="folder-tree-widget"
         data-page-component-module="oroemail/js/app/components/folder-tree-component"
         data-page-component-options="{{ options|json_encode }}">
        <input class="check-all" type="checkbox"/><label class="folder-label">{{ "oro.email.imap.folder.checkAll"|trans }}</label>
        <div class="folder-list">
            {% for key, folder in form.vars.value if folder.parentFolder is null and folder.outdatedAt is null %}
                {{ _self.renderFolder(key, folder, form.vars.full_name) }}
            {% endfor %}
        </div>
        <input name="{{ full_name }}" type="hidden">
    </div>
{% endblock %}

{% block oro_email_mailbox_grid_row %}
    {{ form_label(form) }}
    {{ form_widget(form) }}
{% endblock %}

{% block oro_email_mailbox_grid_label %}
    {% import 'OroUIBundle::macros.html.twig' as UI %}
    {% set redirectData = {
        'route': app.request.attributes.get('_route'),
        'parameters': app.request.attributes.get('_route_params'),
    } %}
    {% if resource_granted('oro_organization_update') %}
        <div class="row" style="margin-top: -42px;">
            <div class="pull-right">
                <div class="btn-group">
                    {{ UI.addButton({
                        'path': path('oro_email_mailbox_create', {redirectData: redirectData}),
                        'label': 'oro.email.system_configuration.mailbox_configuration.add_mailbox.label'|trans
                    }) }}
                </div>
            </div>
        </div>
    {% endif %}
{% endblock %}

{% block oro_email_mailbox_grid_widget %}
    {% import 'OroDataGridBundle::macros.html.twig' as dataGrid %}
    {% set redirectData = {
        'route': app.request.attributes.get('_route'),
        'parameters': app.request.attributes.get('_route_params')
    } %}
    <div class="row" style="margin-right: -20px;">
        {{ dataGrid.renderGrid('base-mailboxes-grid', {
            'redirectData': redirectData, 'organization_ids': [get_current_organization().getId()]
        }) }}
    </div>
{% endblock %}

{% block oro_email_mailbox_widget %}
    {% if  form.children.imapAccountType is defined %}
        {% set imapAccountType = form_widget(form.children.imapAccountType) %}
    {% endif %}
    {% if  form.children.origin is defined %}
        {% set imapAccountType = form_widget(form.children.origin) %}
    {% endif %}

    {% set process = form_row(form.children.processType) ~
        form_widget(form.children.processSettings) %}
    {% set access = form_row(form.children.authorizedUsers) ~
        form_row(form.children.authorizedRoles)
    %}
    {% set options = {
        el: '#' ~ form.vars.id
    } %}
    <div data-page-component-module="oroemail/js/app/views/mailbox-update-view"
         data-page-component-options="{{ options|json_encode }}">
        <fieldset class="form-horizontal form-horizontal-large">
            <h5>{{ 'oro.email.mailbox.general.label'|trans }}</h5>
            {{ form_widget(form) }}
        </fieldset>
        <fieldset class="form-horizontal form-horizontal-large">
            <h5>{{ 'oro.email.mailbox.origin.label'|trans }}</h5>
            {{ imapAccountType|raw }}
        </fieldset>
        <fieldset class="form-horizontal form-horizontal-large">
            <h5>{{ 'oro.email.mailbox.process.label'|trans }}</h5>
            {{ process|raw }}
        </fieldset>
        <fieldset class="form-horizontal form-horizontal-large">
            <h5>{{ 'oro.email.mailbox.access.label'|trans }}</h5>
            {{ access|raw }}
        </fieldset>
    </div>
{% endblock %}

{#
    Renders tab `li` tag for bootstrap tab panels
    paramters:
        form         - instance of FormView, it's a view for localized field
        localeLabels - array with user friendly labels for locale codes
        isDefault    - is current locale's tab label should be marked as default
#}
{% macro renderTabNavItem(form, localeLabels, isDefault = false) %}
    {% set locale = form.vars.name %}

    <li {% if (app.request.locale == locale) %}class="active"{% endif %}>
        <a href="javascript:void(0);" data-target=".emailtemplate-translatation-fields-{{ locale }}" data-toggle="tab" data-related="{{ locale }}">
            {{- localeLabels[locale]|default('N/A')|trans -}}{% if isDefault %} {% trans %}[Default]{% endtrans %}{% endif -%}
        </a>
    </li>
{% endmacro %}

{#
    Renders content of bootstrap tab panel
    paramters:
        form - instance of FormView, it's a view for localized field
#}
{% macro renderTab(form) %}
    {% set locale = form.vars.name %}

    <div class="emailtemplate-translatation-fields-{{ locale }} tab-pane{% if (app.request.locale == locale) %} active{% endif %}">
        {{ form_widget(form) }}
    </div>
{% endmacro %}

{% macro renderFolder(key, folder, namePrefix, maxDepth = 10) %}
    {% if maxDepth %}
        <div>
            <input type="checkbox" data-name="syncEnabled"{% if folder.syncEnabled %}checked="checked"{% endif %}>
            <label class="folder-label">{{ folder.name }}</label>
            <input type="hidden" data-name="fullName" value="{{ folder.fullName }}">
            <input type="hidden" data-name="name" value="{{ folder.name }}">
            <input type="hidden" data-name="type" value="{{ folder.type }}">
            {% if maxDepth > 1 and folder.subFolders|length > 0 %}
                <div class="folder-sub-folders">
                    {% for subKey, subFolder in folder.subFolders %}
                        {{ _self.renderFolder(subKey, subFolder, namePrefix ~ '[' ~ key ~ '][subFolders]', maxDepth - 1) }}
                    {% endfor %}
                </div>
            {% endif %}
        </div>
    {% endif %}
{% endmacro %}
